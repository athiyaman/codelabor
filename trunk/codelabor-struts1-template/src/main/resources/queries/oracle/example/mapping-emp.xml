<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE queryservice PUBLIC "-//ANYFRAME//DTD QUERYSERVICE//EN"
"http://www.anyframejava.org/dtd/anyframe-core-query-mapping-3.1.dtd">
<queryservice>
	<queries>
		<!-- delete -->
		<query id="example.delete.emp" isDynamic="false">
			<statement><![CDATA[
			DELETE /* example.delete.emp */
			FROM 
				EXAMPLE_EMP 
			WHERE 
				EMPNO = ?
			]]></statement>
			<param type="INTEGER"/>	
		</query>
		<query id="example.delete.emp.list" isDynamic="false">
			<statement><![CDATA[
			DELETE /* example.delete.emp.list */
			FROM 
				EXAMPLE_EMP 
			]]></statement>
		</query>		
		
		<!-- insert -->
		<query id="example.insert.emp" isDynamic="false">
			<statement><![CDATA[
			INSERT /* example.insert.emp */ 
			INTO 
				EXAMPLE_EMP (
					EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
				) VALUES (
					?, ?, ?, ?, ?, ?, ?, ?
				)
			]]></statement>
			<param type="INTEGER"/>
			<param type="VARCHAR"/>	
			<param type="VARCHAR"/>
			<param type="INTEGER"/>
			<param type="TIMESTAMP"/>
			<param type="REAL"/>
			<param type="REAL"/>
			<param type="INTEGER"/>
		</query>		
		
		<!-- select -->
		<query id="example.select.emp" isDynamic="false">
			<statement><![CDATA[
				SELECT /* example.select.emp */
					EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO				
				FROM 
					EXAMPLE_EMP
				WHERE 
					EMPNO = ?
			]]></statement>
			<param type="INTEGER"/>
			<result class="org.codelabor.example.dtos.EmpDTO">
				<result-mapping column="EMPNO" attribute="empNo"/>
				<result-mapping column="ENAME" attribute="ename"/>
				<result-mapping column="JOB" attribute="job"/>
				<result-mapping column="MGR" attribute="mgr"/>
				<result-mapping column="HIREDATE" attribute="hireDate"/>
				<result-mapping column="SAL" attribute="sal"/>
				<result-mapping column="COMM" attribute="comm"/>
				<result-mapping column="DEPTNO" attribute="deptNo"/>
			</result>			
		</query>		
		<query id="example.select.emp.list" isDynamic="false">
			<statement><![CDATA[
				SELECT /* example.select.emp.list */
					EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO				
				FROM 
					EXAMPLE_EMP
			]]></statement>
			<result class="org.codelabor.example.dtos.EmpDTO" length="10">
				<result-mapping column="EMPNO" attribute="empNo"/>
				<result-mapping column="ENAME" attribute="ename"/>
				<result-mapping column="JOB" attribute="job"/>
				<result-mapping column="MGR" attribute="mgr"/>
				<result-mapping column="HIREDATE" attribute="hireDate"/>
				<result-mapping column="SAL" attribute="sal"/>
				<result-mapping column="COMM" attribute="comm"/>
				<result-mapping column="DEPTNO" attribute="deptNo"/>
			</result>			
		</query>	
		<query id="example.select.emp.list2" isDynamic="false">
			<statement><![CDATA[
				SELECT /* example.select.emp.list2 */
					EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO				
				FROM 
					EXAMPLE_EMP
			]]></statement>
			<result mapper="org.codelabor.example.daos.mapper.EmpMapper"/>
		</query>		
		<query id="example.select.emp.list.by.dept.no" isDynamic="false">
			<statement><![CDATA[
				SELECT /* example.select.emp.list.by.dept.no */
					EMPNO, ENAME, JOB, MGR, HIREDATE, 				
					SAL, COMM, DEPTNO				
				FROM 
					EXAMPLE_EMP
				WHERE 
					DEPTNO = ?			
			]]></statement>
			<param type="INTEGER"/>
			<result class="org.codelabor.example.dtos.EmpDTO">
				<result-mapping column="EMPNO" attribute="empNo"/>
				<result-mapping column="ENAME" attribute="ename"/>
				<result-mapping column="JOB" attribute="job"/>
				<result-mapping column="MGR" attribute="mgr"/>
				<result-mapping column="HIREDATE" attribute="hireDate"/>
				<result-mapping column="SAL" attribute="sal"/>
				<result-mapping column="COMM" attribute="comm"/>
				<result-mapping column="DEPTNO" attribute="deptNo"/>
			</result>			
		</query>	
		
		<!-- update -->
		<query id="example.update.emp" isDynamic="false">
			<statement><![CDATA[
			UPDATE /* example.update.emp */ EXAMPLE_EMP  
			SET 
				ENAME = ?, JOB = ?, MGR = ?, HIREDATE = ?, SAL = ?, COMM = ?, DEPTNO = ? 
			WHERE
				EMPNO = ?
			]]></statement>
			<param type="VARCHAR"/>	
			<param type="VARCHAR"/>
			<param type="INTEGER"/>
			<param type="TIMESTAMP"/>
			<param type="REAL"/>
			<param type="REAL"/>
			<param type="INTEGER"/>		
			<param type="INTEGER"/>			
		</query>		
	</queries>
</queryservice>

	
