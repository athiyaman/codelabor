메시지 처리 가이드라인 
 

 

 1. 사용자 메시지 (form validation)

  표시 내용: 메시지 내용만 표시 

  메시지 사용 역할자: 시스템 사용자

  메커니즘: 

   client side: JavaScript로 검증, 표현 

   server side: Server side validator로 검증, JavaScript로 표현

  로케일: 시스템 사용자의 사용 언어

  메시지 내용: 검증 오류를 설명할 수 있어야 함

  메시지 표준: 별도 문서 참고

 

 2. 사용자 메시지 (business logic)

  표시 내용: 메시지코드와 메시지 내용이 표시 (시스템 성격에 따라 상세 메시지로 시스템 메시지를 포함할 수 있음)

  메시지 사용 역할자: 시스템 사용자

  메커니즘: 정상 처리 결과나 오류 결과에 포함시켜 presentation layer에 전달

  로케일: 시스템 사용자의 사용 언어

  메시지 내용: 업무 오류를 설명할 수 있어야 함

  메시지 표준: 업무 오류 상황을 설명해야하므로 표준화 불가 (유사 로직이 있을 경우, 업무 담당자간 협의하여 정의 가능)

 

 3. 시스템 메시지 (non business logic)

  표시 내용: 메시지 내용만 표시 (메시지 코드 없어도 무방)

  메시지 사용 역할자: 운영자 혹은 개발자가 확인하기 위한 것 (사용자에게 노출 금지)

  메커니즘: 일반적인 logger 사용

  로케일: 영문 표기가 원칙

  메시지 내용: 시스템 오류를 설명할 수 있어야 함

  메시지 표준: 시스템 오류 상황을 설명해야하므로 표준화 불가 (설명이 어려울 경우, cause의 message 사용 가능)

 

 

사용자 메시지 (form validation)

 

 1. 구현 방안

  Taglib 사용 가능한 경우: Struts, SpringMVC의 Validator와 JavaScript를 조합하여 사용

  Taglib 사용 불가능한 경우: JavaScript를 사용

 

 2. 표현 방법

  Taglib 사용 가능한 경우

   popup / alert 사용하는 경우: 전체 validation 오류를 모아 한번에 표시

   popup / alert 사용하지 않는 경우: 각 form field 옆에 각 오류 내용을 표시

  Taglib 사용 불가능한 경우

   // TODO validation popup / alert 생성 Script 제공할 것 

   popup / alert 사용하는 경우: 전체 validation 오류를 모아 한번에 표시

 

 3. 메시지 표준 

 // TODO 메시지 문자열 생성 Script 제공할 것 (이병관 차장)

 

  1. required

   {}은(는) 필수 입력 항목입니다.

  2. length / range

   character

    {}은(는) 최소 {}글자이어야 합니다.

    {}은(는) 최대 {}글자이어야 합니다.

    {}은(는) 최소 {}, 최대 {}글자이어야 합니다.

   date

    {}은(는) {} 이전이어야 합니다.

    {}은(는) {} 이후이어야 합니다.

    {}은(는) {} 이전, {} 이후이어야 합니다.

   number

    {}은(는) {}보다 작아야 합니다.

    {}은(는) {}보다 커야 합니다.

    {}은(는) {}이상, {}이하여야 합니다.

  3. equal

   {}와 {}이(가) 일치하지 않습니다.

  4. format / pattern

   date, number, phone, card number, ...

   {}의 입력 형식은 {}이어야 합니다.

  5. validate

   {}의 값이 유효하지 않습니다. (format, pattern으로 표현 가능할 경우, format, pattern으로 표현할 것)

  

 

 

사용자 메시지 (business logic)

 

 1. 명명법 

  메시지 유형 + 업무 코드 + 세부 업무 코드 + 번호

 

  메시지 유형

   1자리 (I, W, E 중 택일)

   I (Info): 정보성 메시지인 경우 사용

   W (Warn): 경고성 메시지인 경우 사용

   E (Error): 오류성 메시지인 경우 사용

 

  업무 코드 / 세부 업무 코드

   별도의 업무 구분 명명법 참고 

 

  번호 

   2자리 (예: 00 ~ 99 중 택일)

   반드시 고유해야함

   반드시 연속되지 않아도 무방

   세부 업무 아래에 분류가 필요할 경우 번호 대역으로 구분해서 사용해도 무방 (00 ~ 09, 10 ~ 19, ...)

 

 

 2. 메시지 유형별 구현 방안

 

  1. 정상 메시지 (Info, Warn)

   // TODO Framework

 

  2. 오류 메시지 (Error)

   // TODO Framework 

 

 3. 메시지 등록 방법

  // TODO Framework 

 

 4. 메시지 표준

 

  업무 공통 메시지

   1. success

    정상 처리 되었습니다.

 

  업무 유사 메시지: 일부 유사 기능을 가진 업무에 한해 메시지만 사용 가능 (메시지 코드는 달라야 함)

   1. duplication 

    {}은(는) 이미 존재합니다.

    {}은(는) 사용할 수 있습니다.  

 

 

