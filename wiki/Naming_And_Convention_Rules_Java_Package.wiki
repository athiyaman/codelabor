일반적인 Java Application 개발 시 필요한 일반적인 패키지 명명법을 정의한다.
본 명명법은 보다 구체화된 명명법이 존재할 경우, 해당 내용으로 재정의될 수 있다.
본 명명법은 아래 우선 순위 중, ‘개발 언어 의존적 명명법 및 관례’에 해당된다. 
||우선 순위||명명법||
||1||PJT 정의 명명법 및 관례||
||2||업종, 업무 용어 의존적 명명법 및 관례||
||3||3rd Party SW 제품 의존적 명명법 및 관례||
||4||개발 Framework 의존적 명명법 및 관례||
||5||개발 언어 의존적 명명법 및 관례||
||6||운영체제 의존적 명명법 및 관례||


= 기본 패키지 =
도메인 역순으로 기본 패키지를 구성한다. 반드시 등록된 도메인이 아니라도 상관없으나, 소스 코드에 대한 오너십이 있는 조직 이름이 포함되도록 한다.
{{{
org.codelabor 기본 패키지
}}}
기본적으로 공식 도메인을 참고하여 기본 패키지명을 정의하되, 필요에 따라 일부를 생략하거나 보완할 수 있다.
단, 수정한 기본 패키지를 도메인으로 접속한 경우 해당 조직과 무관한 사이트로 접속될 경우, 해당 패키지는 사용하지 않는다. 


= 상위 패키지 = 
기본 패키지에 이어 상위 공통 패키지를 구성한다.

== 상위 공통 패키지 ==
업무 독립적으로 시스템 공통, 업무 공통, 예제 패키지를 둔다. 
{{{
org.codelabor.system 시스템 공통 패키지
org.codelabor.common 업무 공통 패키지
org.codelabor.example 예제 패키지
}}}
예제 패키지는 개발자가 참고할 수 있는 예제 소스를 탑재하되, CI(Continuous Integration) 서버에서 빌드 후, 배포 시에는 예외처리하여 배포되지 않도록 한다.
테스트 코드 역시 운영 서버 배포시에는 예외 처리되는데 이 경우, 패키지로 구분하지 않고 패키지로 구분하지 않고 Source Directory 자체를 구분하도록 한다. (Maven 스타일의 소스 디렉토리 레이아웃 권장)
{{{
src/main/java 소스 코드 디렉토리 (배포됨)
src/test/java 테스트 코드 디렉토리 (배포되지 않음)
}}}