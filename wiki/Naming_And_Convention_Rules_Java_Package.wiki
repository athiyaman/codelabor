=Java Package 명명법=

==개요==

일반적인 Java Application 개발 시 필요한 일반적인 패키지 명명법을 정의한다. 
본 명명법은 보다 구체화된 명명법이 존재할 경우, 해당 내용으로 재정의될 수 있다. 

||우선 순위||명명법||
||1||PJT 정의 명명법 및 관례||
||2||업종, 업무 용어 의존적 명명법 및 관례||
||3||3rd Party SW 제품 의존적 명명법 및 관례||
||4||개발 Framework 의존적 명명법 및 관례||
||5||개발 IDE 의존적 명명법 및 관례||
||6||개발 언어 의존적 명명법 및 관례||
||7||운영체제 의존적 명명법 및 관례||

==7순위: 운영체제 의존적 명명법 및 관례==

TBD


==순위: 개발 언어 의존적 명명법 및 관례==

개발자가 기본적으로 숙지하고 있어야하는 명명법이다.
실제 개발 시에는 개발 툴의 자동 Formatting 기능을 사용할 것이므로 개략적으로 통독한 후, 세부적인 내용까지 암기할 필요는 없다.
단, 사용하고 있는 명명법의 근거와 기원은 알아두도록 한다.

J2SE 코딩 컨벤션
  * [http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html Code Conventions for the Java Programming Language]

J2EE 코딩 컨벤션
  * [http://www.oracle.com/technetwork/articles/javase/code-convention-138726.html Code Conventions for the JavaServer Pages Technology Version 1.x Language]
  * [http://www.oracle.com/technetwork/java/namingconventions-139351.html Guidelines, Patterns, and code for end-to-end Java applications]
 
==5 순위: 개발 IDE 의존적 명명법 및 관례==

Eclipse (혹은 STS)의 내장 Formatter를 사용하여 개발자로 하여금 Formatting을 하기 위한 불필요한 공수를 줄여주도록 한다.
Eclipse 내장 Formatter의 포맷 형식과 Java Conventions 의 포맷 형식에는 아래와 같은 차이가 있다.
 
Eclipse (built-in)
<pre>
<code class="xml">
<setting id="org.eclipse.jdt.core.formatter.tabulation.char" value="tab"/>             
<setting id="org.eclipse.jdt.core.formatter.tabulation.char" value="mixed"/>
</code>
</pre>
 
Java Conventions (built-in)
<pre>
<code class="xml">
<setting id="org.eclipse.jdt.core.formatter.tabulation.size" value="4"/>                
<setting id="org.eclipse.jdt.core.formatter.tabulation.size" value="8"/>
</code>
</pre>

==4 순위: 개발 Framework 의존적 명명법 및 관례==

TBD

==3 순위: 3rd Party SW 제품 의존적 명명법 및 관례==

TBD

==2 순위: 업종, 업무 용어 의존적 명명법 및 관례==

TBD

==1 순위: PJT 정의 명명법 및 관례==

TBD

=세부 예외 사항=

아래의 경우 두 단어 이상의 합성어라고 하더라도 대문자를 사용하지 않는다.
가독성이 떨어질 경우 하이픈(-)으로 구분할 수 있다.

  * Directory
  * Java Package
  * URL (단, 가장 뒷부분은 허용)



위 우선 순위에 따라 크게 아래와 같은 분류로 패키지 명명법을 구분한다.
  * [Naming_And_Convention_Rules_Java_Package_Basic 패키지 기본 명명법]
  * [Naming_And_Convention_Rules_Java_Package_Custom 패키지 커스텀 명명법]